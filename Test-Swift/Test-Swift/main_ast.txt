(source_file "main.swift"
  (import_decl range=[main.swift:8:1 - line:8:8] 'Foundation')
  (top_level_code_decl range=[main.swift:10:1 - line:10:22]
    (brace_stmt implicit range=[main.swift:10:1 - line:10:22]
      (call_expr type='()' location=main.swift:10:1 range=[main.swift:10:1 - line:10:22] nothrow
        (declref_expr type='(Any..., String, String) -> ()' location=main.swift:10:1 range=[main.swift:10:1 - line:10:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (argument_list labels=_:separator:terminator:
          (argument
            (vararg_expansion_expr implicit type='Any...' location=main.swift:10:7 range=[main.swift:10:7 - line:10:7]
              (array_expr implicit type='Any...' location=main.swift:10:7 range=[main.swift:10:7 - line:10:7] initializer=**NULL**
                (erasure_expr implicit type='Any' location=main.swift:10:7 range=[main.swift:10:7 - line:10:7]
                  (string_literal_expr type='String' location=main.swift:10:7 range=[main.swift:10:7 - line:10:7] encoding=utf8 value="Hello, World!" builtin_initializer=Swift.(file).String extension.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
          (argument label=separator
            (default_argument_expr implicit type='String' location=main.swift:10:6 range=[main.swift:10:6 - line:10:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=1))
          (argument label=terminator
            (default_argument_expr implicit type='String' location=main.swift:10:6 range=[main.swift:10:6 - line:10:6] default_args_owner=Swift.(file).print(_:separator:terminator:) param=2))
        )))))